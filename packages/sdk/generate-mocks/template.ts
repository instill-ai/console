/**
 * Credit: https://github.com/zoubingwu/msw-auto-mock
 */

import {
  OperationCollection,
  transformToGenerateResultFunctions,
  transformToHandlerCode,
} from "./transform";
import { GenerateOptions } from "./types";

const getImportsCode = () => {
  const imports = [
    `import { HttpResponse, http } from 'msw';`,
    `import { faker } from '@faker-js/faker';`,
  ];

  return imports.join("\n");
};

export const mockTemplate = (
  operationCollection: OperationCollection,
  baseURL: string,
  options: GenerateOptions,
) => `/**
* This file is AUTO GENERATED by [msw-auto-mock](https://github.com/zoubingwu/msw-auto-mock)
* Feel free to commit/edit it as you need.
*/
/* eslint-disable */
/* tslint:disable */
${getImportsCode()}

faker.seed(1);

const baseURL = '${baseURL}';
const MAX_ARRAY_LENGTH = ${options?.maxArrayLength ?? 20};

let i = 0;
const next = () => {
  if (i === Number.MAX_SAFE_INTEGER - 1) {
    i = 0;
  }
  return i++;
}

export const handlers = [
  ${transformToHandlerCode(operationCollection)}
];

${transformToGenerateResultFunctions(operationCollection, baseURL, options)}
`;

export const browserIntegration = [
  `import { setupWorker } from 'msw/browser'`,
  `import { handlers } from './handlers'`,
  `export const worker = setupWorker(...handlers)`,
].join("\n");

export const nodeIntegration = [
  `import { setupServer } from 'msw/node'`,
  `import { handlers } from './handlers'`,
  `export const server = setupServer(...handlers)`,
].join(`\n`);
