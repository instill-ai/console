name: Integration Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-push-image:
    if: github.ref == 'refs/heads/main'
    name: Build and push image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: dropletbot
          password: ${{ secrets.botDockerHubPassword }}

      - name: Build and push (latest)
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: instill/console:latest
          cache-from: type=registry,ref=instill/console:buildcache
          cache-to: type=registry,ref=instill/console:buildcache,mode=max

  base:
    needs: build-push-image
    if: github.ref == 'refs/heads/main'
    name: Base Backends
    strategy:
      fail-fast: false
      matrix:
        component: [mgmt-backend]
    uses: instill-ai/base/.github/workflows/integration-test-backend.yml@main
    with:
      component: ${{ matrix.component }}
      target: latest
  vdp:
    needs: build-push-image
    if: github.ref == 'refs/heads/main'
    name: VDP Backends
    strategy:
      fail-fast: false
      matrix:
        component: [pipeline-backend, controller-vdp]
    uses: instill-ai/vdp/.github/workflows/integration-test-backend.yml@main
    with:
      component: ${{ matrix.component }}
      target: latest
  model:
    needs: build-push-image
    if: github.ref == 'refs/heads/main'
    name: Model Backends
    strategy:
      fail-fast: false
      matrix:
        component: [model-backend, controller-model]
    uses: instill-ai/model/.github/workflows/integration-test-backend.yml@main
    with:
      component: ${{ matrix.component }}
      target: latest
  console:
    needs: build-push-image
    if: github.ref == 'refs/heads/main'
    name: Console
    uses: instill-ai/base/.github/workflows/integration-test-console.yml@main
    with:
      target: latest

  pr-head:
    if: github.event_name == 'pull_request'
    name: PR head branch
    runs-on: ubuntu-latest
    steps:
      # mono occupies port 8084 which conflicts with mgmt-backend
      - name: Stop mono service
        run: |
          sudo kill -9 `sudo lsof -t -i:8084`
          sudo lsof -i -P -n | grep LISTEN

      - name: Pre Free Disk Space (Ubuntu)
        run: |
          df --human-readable
          sudo apt clean
          rm --recursive --force "$AGENT_TOOLSDIRECTORY"

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Load .env file
        uses: cardinalby/export-env-action@v2
        with:
          envFile: ./apps/console/.env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: .
          load: true
          tags: instill/console:latest

      - name: Checkout repo (base)
        uses: actions/checkout@v3
        with:
          repository: instill-ai/base

      - name: Load .env file (base)
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Launch Instill Base (latest)
        run: |
          INSTILL_CORE_HOST=api-gateway \
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml up -d --quiet-pull
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml rm -f

      - name: Checkout repo (vdp)
        uses: actions/checkout@v3
        with:
          repository: instill-ai/vdp

      - name: Load .env file (vdp)
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Launch Instill VDP (latest)
        run: |
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml up -d --quiet-pull
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml rm -f

      - name: Checkout repo (model)
        uses: actions/checkout@v3
        with:
          repository: instill-ai/model

      - name: Load .env file (model)
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Launch Instill Model (latest)
        run: |
          ITMODE_ENABLED=true \
          RAY_LATEST_TAG=latest \
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml up -d --quiet-pull
          ITMODE_ENABLED=true \
          RAY_LATEST_TAG=latest \
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml rm -f

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Run console integration test (latest)
        run: |
          docker build --build-arg TEST_USER='root' -f Dockerfile.playwright -t console-playwright:latest .
          docker run -t --rm \
            -e NEXT_PUBLIC_GENERAL_API_VERSION=v1beta \
            -e NEXT_PUBLIC_MODEL_API_VERSION=v1alpha \
            -e NEXT_PUBLIC_CONSOLE_EDITION=local-ce:test \
            -e NEXT_PUBLIC_CONSOLE_BASE_URL=http://console:3000 \
            -e NEXT_PUBLIC_BASE_API_GATEWAY_URL=http://api-gateway:8080  \
            -e NEXT_SERVER_BASE_API_GATEWAY_URL=http://api-gateway:8080  \
            -e NEXT_PUBLIC_SELF_SIGNED_CERTIFICATION=false \
            -e NEXT_PUBLIC_INSTILL_AI_USER_COOKIE_NAME=instill-ai-user \
            --network instill-network \
            --entrypoint ./entrypoint-playwright.sh \
            --name console-integration-test \
            console-playwright:latest
